#------------------------
# Notes
#------------------------
Event is normally once per, so SpEffects won't be refreshed until the action is done again.

#------------------------
# env( x, y )
#------------------------
Returns TRUE or FALSE.

0   IsGeneralAnimEnd 			        # 通常アニメ終了したか
1   IsAttackAnimEnd 			        # 攻撃アニメ終了したか
9   AnimIDOffset 			            # アニメIDオフセット設定
10  AdditiveBlendAnim 			        # 加算ブレンドアニメーション設定
11  AdditiveBlendAnimOfSlot             # スロット指定加算ブレンドアニメーション設定
100 IsAtkRequest 			            # 攻撃リクエストがきたか
    <attack request type>
101 IsAtkReleaseRequest 			    # 攻撃解除リクエストがきたか
102 IsChainAtkRequest 			        # 連続攻撃リクエストがきたか
103 GetAtkDuration 			            # 攻撃持続時間を取得
104 GetWeaponSwitchRequest 			    # 㾀武器切替リクエストを取得
105 GetCommandIDFromEvent 			    # イベントからのコマンドIDを取得
106 GetAIActionType 			        # AI行動タイプを取得
107 GetAIChainActionType 			    # AI連続行動タイプを取得
108 GetChainEvadeRequest 			    # 連続緊急回避リクエストがきたか
109 GetWeaponChangeRequest 			    # 武器チェンジリクエストを取得
110 GetAnimIDFromMoveParam 			    # 移動パラメータからアニメID取得
111 IsThereAnyAtkRequest 			    # 何か攻撃リクエストがあるか
112 IsThereAnyChainAtkRequest 	        # 何か連続攻撃リクエストがあるか
113 IsItemUseMenuOpening 			    # アイテム使用メニュー開くか
114 IsMagicUseMenuOpening 			    # 魔法使用メニュー開くか
115 IsItemUseMenuOpened 			    # アイテム使用メニュー開いているか
116 IsMagicUseMenuOpened 			    # 魔法使用メニュー開いているか
117 GetBlendAnimIDFromMoveParam         # 移動パラメータからブレンドアニメID取得
118 GetAIChainStepType 			        # AI連続ステップタイプを取得
119 GetTransitionToSpecialStayAnimID    # 特殊待機への遷移アニメIDを取得
120 GetAIAtkCancelType 			        # AI攻撃キャンセルタイプを取得
121 GetWeaponCancelType                 # 剣戟キャンセルタイプを取得
    <hand index>
122 IsWeaponCancelPossible 			    # 剣戟キャンセル可能か
123 GetAIDefenseCancelType 			    # AI耐えるキャンセルタイプを取得
124 GetAIVersusBackstabCancelType       # AI対バクスタキャンセルタイプを取得
200 IsFalling 			                # 落下しているか
201 IsLanding 			                # 着地しているか
202 GetReceivedDamageType 			    # 食らったダメージタイプを取得
203 IsActiveActionValid 			    # 能動アクション有効か
204 GetActionEventNumber 			    # アクションイベント番号取得
205 IsNormalDmgPassThroughDuringThrow   # 投げ中に通常ダメージが通るか
206 IsThrowing 			                # 投げ中か？
207 GetWeaponSwitchState 			    # 武器切替状態を取得
209 IsEquipmentSwitchPossible 			# 装備切替可能な状態か
210 IsAnimCancelPossibleInAtkRelease    # 攻撃リリースでアニメキャンセル可能か
211 IsEmergencyStopAnimPlaying          # 緊急停止アニメ再生するか
212 GetLockRangeState 			        # ロック距離状態を取得
213 GetLockAngleState 			        # ロック角度状態を取得
214 IsAnimCancelPossibleInDamageHit     # ダメージヒットでアニメキャンセル可能か
215 IsChangeToScrapeAtk 			    # がりがり攻撃に変更可能か
216 IsChangeToDeflectAtk 			    # はじき攻撃に変更可能か
217 IsChangeToAfterParrySuccess         # パリィ成功後に変更可能か
218 IsChangeFromNormalToBigAtk 			# 通常攻撃から大攻撃に変更可能か
219 GetMovementType 			        # 移動タイプ取得
220 IsLargeAtkComboPossible 			# 大攻撃でコンボ可能か
221 IsMapActionPossible 			    # マップアクション可能か
222 GetReceivedDamageDirection 			# 食らったダメージ方向を取得
223 GetMapActionID 			            # マップアクションIDを取得
224 GetFallHeight 			            # 落下した高さを取得
225 GetEquipWeaponCategory 			    # 装備武器カテゴリ番号取得 (Base TAE ID)
226 IsHoldingBow 			            # 弓構え中か
227 GetMagicAnimType 			        # 魔法アニメタイプ取得
228 WasNotLargeAtk 			            # 大攻撃じゃなかった
229 IsBackAtkPossible 			        # 背後攻撃可能か
230 IsAfterParryAtkPossible 			# パリィ後攻撃可能か
231 GetItemAnimType 			        # アイテムアニメタイプ取得
232 IsMagicUseable 			            # 魔法使用可能か
233 IsItemUseable 			            # アイテム使用可能か
234 IsPrecisionShoot 			        # 精密射撃中か
235 IsFireDamaged 			            # 炎ダメージ中か
236 GetDamageLevel 			            # ダメージレベル取得
237 GetGuardLevelAction 			    # ガードレベルアクション取得
238 IsNewLeftHandAtkFromStay 			# 待機からの新左手攻撃有効か
239 IsParryFromIdle 			        # 待機からのパリィ攻撃有効か
240 IsGuardFromIdle 			        # 待機からのガード有効か
241 IsNewLeftHandAtkFromAtkCancel       # 攻撃キャンセルからの新左手攻撃有効か
242 IsParryFromAtkCancel 			    # 攻撃キャンセルからのパリィ攻撃有効か
243 IsGuardFromAtkCancel 			    # 攻撃キャンセルからのガード有効か
244 IsTiedUp 			                # 金縛り中か
245 IsOutOfAmmo 			            # 矢がない
246 IsUseCatLanding 			        # 猫の着地有効か
247 GetHoverMoveState 			        # ホバー移動状態取得
248 IsTruelyLanding 			        # 本当に着地しているか
249 IsRightHandMagic 			        # 右手魔法か
250 IsChangeToSpecialStayAnim           # 特殊待機アニメに変更するか
251 GetSpecialStayAnimID 			    # 特殊待機アニメID取得
252 AcquireSpecialDamageAnimationID     # AcquireSpecialDamageAnimationID
253 IsRunTurnAnimPlaying 			    # 走り旋回アニメ再生するか
254 IsGenerateAction 			        # ジェネレートアクションするか
255 GetSpecialStayCancelAnimID 			# 特殊待機キャンセルアニメID取得
256 HasReceivedAnyDamage 			    # 少しでもダメージを食らったか
257 GetMoveAnimParamID 			        # 移動アニメパラメータID取得
258 GetGuardLevel 			            # ガードレベル取得
259 IsRequestTurnAnimStart 			    # 旋回アニメ開始要求があるか
260 IsTurningWithAnim 			        # アニメで旋回中か
261 IsFlying 			                # 飛行中か
262 IsAbilityInsufficient 			    # 能力不足か
263 GetEquipWeightRatioForFalling       # 落下用装備重量比率取得
264 GetFlightMotionState 			    # 飛行移動状態取得
265 GetIsWeakPoint 			            # 弱点か取得
266 GetMoveAnimBlendRatio 			    # 移動アニメブレンド率取得
267 GetLadderActionState 			    # はしごアクション状態取得
268 IsInDisguise 			            # 変身中か
269 IsCoopWait 			                # 協力待ちか
270 IsCoop 			                    # 協力か
271 IsSpecialTransitionPossible         # 特殊遷移可能か
272 GetLandingAnimBlendRatio 			# 着地アニメブレンド率を取得
273 GetThrowAnimID 			            # 投げアニメIDを取得
274 DidOpponentDieFromThrow 			# 相手が投げ死亡したか？
275 HasThrowEnded 			            # 投げ抜けされたか？
276 IsThrowSelfDeath 			        # 自分が投げ死亡したか？
277 IsThrowSuccess 			            # 投げ抜け成功したか？
278 GetGuardMotionCategory 			    # ガードモーションカテゴリ取得
279 IsBeingThrown 			            # 自分が投げられたか？
280 IsSelfThrow 			            # 自分が投げたか？
281 IsThrowDeathState 			        # 投げ死亡状態か？
282 GetNewLockState 			        # 新ロック状態取得
283 IsOnLadder 			                # はしご中か
284 GetPhysicalAttribute 			    # 物理属性を取得
285 GetSpecialAttribute 			    # 特殊属性を取得
286 GetSpecialStayDeathAnimID 			# 特殊待機死亡アニメIDを取得
287 HasReceivedAnyDamage_AnimEnd        # 少しでもダメージを食らったか_アニメ終了
288 EggGrowth_IsHeadScratch 			# 植卵_頭をかくか
289 EggGrowth_IsBecomeEggHead 			# 植卵_卵頭になるか
290 IsStop 			                    # 停止しているか
291 IsSomeoneOnLadder 			        # はしご上に誰かいるか
292 IsSomeoneUnderLadder 			    # はしご下に誰かいるか
293 GetLadderHandState 			        # はしごの手状態を取得
294 DoesLadderHaveCharacters 			# はしごにキャラがいるか
295 IsLadderRightHandStayState 			# はしごの右待機状態か
296 IsDescendingToFloor 			    # 床滑り降り
297 IsInputDirectionMatch 			    # 入力方向が一致するか # Whether input direction matches for that cardinal (e.g. wont match for a sec during turn around anims)
298 IsSpecialTransition2Possible        # 特殊遷移２可能か
299 IsVersusDivineDamage 			    # 対神聖ダメージか
300 IsGeneralAnimCancelPossible         # 汎用アニメキャンセル可能か
301 GetEventEzStateFlag 			    # イベントEzStateフラグ取得
302 IsLadderEventEnd 			        # はしごイベント終了か
303 IsReachBottomOfLadder 			    # はしご下到着か
304 IsReachTopOfLadder 			        # はしご上到着か
305 GetStateChangeType 			        # 状態変化タイプを取得
    <condition type> # State Info enum
306 IsOnLastRungOfLadder 			    # はしごの最終段にいるか
311 GetWeaponDurability 			    # 武器の耐久度を取得
312 IsWeaponBroken 			            # 耐久度で分岐するか
313 IsAnimEndBySkillCancel 			    # 技量キャンセルでアニメ終了したか
314 EggGrowth_IsBecomeEgghead_SecondStage   # 植卵_卵頭になるか_二段目
315 IsHamariFallDeath 			        # 落下ハマリで死亡させるか
316 IsClient 			                # クライアントか
317 IsSlope 			                # 斜面か
318 IsSwitchState 			            # スイッチ状態か？
319 IsPressUpKey 			            # 上キーを押したか？
320 IsSpecialTurning 			        # 特殊旋回中か
321 GetIntValueForTest 			        # テスト用Int値取得
322 IsObjActInterpolatedMotion 			# ObjActによる移動補間中か
323 GetObjActTargetDirection 		    # ObjActのターゲット方向取得
324 GetObjActRemainingInterpolateTime   # ObjAct残り補間時間取得
325 IsGap 			                    # 隙か
326 GetWeaponID 			            # 剣戟Id取得
327 IsMovingLaterally 			        # 平行移動中か
328 IsNet 			                    # ネットか
329 HasBrokenSA 			            # SAブレイクしたか
330 IsEmergencyQuickTurnActivated       # 緊急時クイックターン発動許可中か
331 IsDoubleChantPossible 			    # 二重詠唱可能か
332 IsAnimOver 			                # アニメが終了したか
333 ObtainedDT 			                # DT取得
334 GetBehaviorID 			            # Behavior用識別値取得
    <id>
335 IsTwoHandPossible 			        # 両手持ち可能か
336 IsPartDamageAdditiveBlendInvalid    # 部位・ダメージ加算ブレンド無効か
337 IsThrowPosRealign 			        # 投げ位置合わせ中か
338 GetBoltLoadingState 			    # ボルト装填状態取得
339 IsAnimEnd 			                # アニメ終了か
340 IsTwinSwords 			            # 双剣か
341 GetTurnAngleForDelayedTurn          # 遅延旋回用TurnAngle取得
342 GetThrowDefenseCount 			    # 投げ抜け抵抗回数取得
343 IsEmergencyEvasionPossible          # 緊急回避可能か
344 HasEnoughArtsPoints                 # アーツポイント足りるか
    <button index>, <hand index>
345 GetEquipWeaponSpecialCategoryNumber  # 装備武器特殊カテゴリ番号取得 (Override TAE ID)
    <hand index>
346 CheckForEventAnimPlaybackRequest    # イベントアニメ再生要求があるか
347 IsFemale 			                # 女性か
348 GetDelayTurnAngleDifference         # 遅延旋回角度差取得
349 IsDamageMotionOff 			        # ダメージモーション無効か
350 HasReachedStatsNeededForWeapon      # 武器能力開放ステータス値到達か
    <hand index>
351 UpperArmControlOuterAngle           # 上腕制御外側角度
352 UpperArmControlTopAndBottomAngle    # 上腕制御上下角度
353 CompleteLadderSlideDown 		    # はしご滑り降り完了
354 GetLadderRungCount 			        # はしご段数取得
355 GetNumberOfRungsBelowOnLadder       # 滑り降り停止先のはしご段数取得
356 GetBowAndArrowSlot 			        # 弓矢スロット取得
357 GetWeaponStorageSpotType            # 武器格納場所タイプ取得
    <hand index>
358 GetStayAnimCategory 			    # 待機アニメカテゴリ取得 (Hold TAE ID)
359 GetWeaponSwitchState 			    # 
360 IsEquipmentMenuOpen 			    # 装備メニュー開いているか
361 GetRemainingArrowCount 			    # 矢の残弾数取得
1000 GetHP 			                    # HP取得
1001 GetStamina 			            # スタミナ取得
1002 IsGhost 			                # ゴーストか
1003 GetRandomInt 			            # 整数ランダム値取得
1004 GetRandomFloat 			        # 小数ランダム値取得
1005 IsUnableToDie 			            # 成仏不可か
1006 IsResurrectionPossible 			# 蘇生可能か
1007 IsCOMPlayer 			            # COMプレイヤか
1008 GetAITargetAwareState 			    # AIのターゲット認識状態取得
1009 IsAIChangeToAwareState 			# AI認識状態に変化あるか
1010 GetAITargetAwareStatePreviousFrame # 前のフレームのAIターゲット認識状態取得
1100 GetTestDamageAnimID 			    # テスト用ダメージアニメID取得
1101 IsInvincibleDebugMode 			    # 無敵デバッグモード有効か
1102 WasGameLaunchedInPGTestMode        # PGテストモード起動しているか
1103 IsTiltingStick 			        # スティックを傾けたか
1104 GetGestureRequestNumber            # ジェスチャーリクエスト番号を取得
1105 IsStayState 			            # 待機ステートか
1106 ActionRequest 			            # アクションリクエスト
1107 ActionCancelRequest 			    # アクション解除リクエスト
1108 ActionDuration 			        # アクション継続時間
1109 HasActionRequest 			        # 何かアクションリクエストがあるか
1110 MovementRequest 			        # 移動リクエスト
1111 MovementRequestDuration            # 移動リクエスト継続時間
1112 HasThrowRequest 			        # 投げ要求か
1113 IsGuardCancelPossible              # ガードキャンセル可能か
1114 DoesAnimExist 			            # アニメが存在するか
1115 GetAIMovementType 			        # AI移動タイプ取得
1116 GetSpecialEffectID 			    # 特殊効果IDを取得
1117 IsConversationEnd 			        # 会話が終了したか
1118 IsLocked 			                # ロック中か
1119 GetAtkDirection 			        # 攻撃方向取得
1120 GetPartGroup 			            # 部位グループ取得
1121 GetKnockbackDistance 			    # ノックバック距離取得
2000 IsMoveCancelPossible 			    # 移動キャンセル可能か
2002 GetSpecialMovementType 			# 特殊移動タイプ取得
2003 GetGeneralTAEFlag 			        # TAE汎用フラグ取得
2004 IsSwingHitTarget 			        # 振りが当たっているか
2005 GetCeremonyState 			        # 儀式状態を取得
    <enum>
2006 GetSuccessiveGuardCount            # 連続ガード回数を取得
2007 GetMinLuck 			            # 最小よろけ値を取得
2008 GetAccumulatedLuck 			    # 蓄積よろけ値を取得
2009 GetMaxLuck 			            # 最大よろけ値を取得
2010 GetMaxStamina 			            # 最大スタミナ取得
2011 GetGeneralMSBParameter 			# MSB汎用パラメータ取得
2012 IsHitWall 			                # 壁に当たっているか
2013 GetSafetyDirection 			    # 安全方向取得
2014 IsInCeremony 			            # 儀式中か
2015 IsDoingCorpseCarryKeyframe         # 死体運びキーフレーム化するか
2016 GetMP 			                    # MP取得
2017 IsCeremonyComplete 			    # 儀式完了か
2018 IsCeremonyInterrupt                # 儀式中断か

#------------------------
# act( x, y, z )
#------------------------
0 ChangeGeneralAnim
1 ChangeUpperBodyAnim
2 ChangeStayAnim
3 ChangeGeneralAnimCategorized
      AnimCategory - Category of animation ID to choose from.
      AnimID - Animation ID. Uses the Category to determine which exact animation ID to play.
      LayerIndex - Description="Animation Mediator Layer in which to play the animation.
      Blend - Not much is known about this value. Usually something like 0.2 for attacks.
      IsLoop - Whether the animation will continue to loop or stop on the last frame.
4 ChangeUpperBodyAnimCategorized
5 ChangeGeneralAnimAdditiveCategorized
6 ChangeUpperBodyAnimAdditiveCategorized
7 ChangeGeneralAnimCategorizedMatchPlaybackTime
8 ChangeUpperBodyAnimCategorizedMatchPlaybackTime
9 SetAnimIDOffset
10 SetAdditiveBlendAnimation
11 SetAdditiveBlendAnimationSlotted
12 ChangeBlendAnimationCategorized
13 ChangeUpperAndLowerBodySyncedAnimCategorized
100 SetActiveActionState
101 SwitchMotion
    <bool>
102 SetAllowedThrowAttackType
    <enum>
103 SetAllowedThrowDefenseType
    <enum>
104 SwitchEquippedWeapon
105 SetReadyForAtkFinish
106 SetEquipmentChangeable
107 SetUnableToFall
108 SendMessageIDToEvents
    <enum>
109 SetAttackType
110 SetStaminaRecoveryDisabled
111 SetAIBusyDoingAction
112 BowTurn
113 SetBowStance
114 SetPreciseAimMode
115 SetSpecialMovement
116 SetIsWeaponChanging
117 SetIsItemInUse
    <bool>
118 SetIsMagicInUse
    <bool>
119 SetHoverState
120 RemoveBinoculars
121 ChangeToSpecialStay
122 SetIsHeadTurnPossible
123 OpenMenuWhenUsingItem
124 OpenMenuWhenUsingMagic
125 BlowDamageTurn
126 SetDeathStay
    <bool>
127 CloseMenuWhenUsingItem
128 CloseMenuWhenUsingMagic
129 DisallowAdditiveTurning
    <bool>
130 ChangeFlightStatus
131 ShowFixedYAxisDirectionDisplay
132 WhiffPossibility
133 SetLadderActionState
    <enum>
134 SetInsufficientStrengthAnimID
135 ForceCancelThrowAnim
136 SetThrowState
    <enum>
137 StartSlidingDownLadder
138 SetIsEventActionPossible
    <bool>
139 RequestThrowAnimInterrupt
140 SetHandStateOfLadder
141 SetDamageAnimType
    <enum>
142 DownwardSlideTurn
    <bool>
143 InterruptAttack
144 SkyDeathWarp
145 ClearSlopeInfo
146 ReceiveStateInput
147 SetIsEquipmentChangeableFromMenu    # Slot swap
148 SetVariable
149 AimAtSelfPosition
150 SetIsItemAnimationPlaying
151 DoAIReplanningAtCancelTiming
152 DenyEventAnimPlaybackRequest
153 InvokeBackstab                      # バックスタブ発動
154 WeaponParameterReferent             # 武器パラメータ参照先
155 AINotifyAttackType                  # AI通知攻撃タイプ
156 SetAutoCaptureTarget
157 ClearAutoCaptureTarget
158 RequestAIReplanning                 # キャンセルタイミングでAIへのリプランニング要求
159 TurnTowardAttacker
160 SetThrowPossibilityState_Attacker
161 SetThrowPossibilityState_Defender
162 MarkOfGreedyPersonSlipDamageDisable
200 StateIdentifier
1000 AddHP
    <int>
1001 AddStamina
    <int>
1100 SyncAtInit_Active
1101 SyncAtInit_Passive
2001 SetMovementScaleMult
    <float>
2002 AddSpEffect
    <id>
2003 SetFastStealthThrowEnabled
2004 SetTurnSpeed
2005 SetCeremonyState
2006 SetDamageMotionBlendRatio
    <float>
2007 SetForceTurnTarget
2008 ForceTurn
2009 SpecialTurn
2010 SetInSpecialGuard
2011 SetWeaponCancelType
    <enum>
2012 SetIsPreciseShootingPossible        # 精密射撃可能か
2013 ChooseBowAndArrowSlot               # 弓矢スロット選択
    <slot>
2014 Set4DirectionMovementThreshold      # 4方向移動閾値設定
    <int>
    <int>
    <int>
    <int>
2015 LockonSystemUnableToTurnAngle       # ロックオン時システム旋回不可角度
    <angle>
    <angle>
2016 ReserveArtsPointsUse                # アーツポイント使用予約
    <button>
    <hand>
2017 SetArtsPointFEDisplayState
2018 LockonFixedAngleCancel              # ロックオン中角度固定解除
2019 TurnToLockonTargetImmediately       # ロックオン対象へ即座に旋回
2020 SetSpecialInterpolation
2021 LadderSlideDownCancel
2022 DisableMagicIDSwitching             # 魔法ID切り替え無効
2023 DisableToolIDSwitching              # 道具ID切り替え無効
2024 UseItemDecision

9000 DebugLogOutput                 # デバッグログ出力
    <string>
9001 Test_SpEffectDelete
9002 Test_SpEffectTypeSpecifyDelete
9003 MarkerStart
9004 MarkerEnd

9100 Wait
9101 ResetInputQueue
9102 SetIsEventAnim
9103 AIAttackState                  # AI攻撃ステート
    <Action Type>
9104 SetIsTurnAnimInProgress 
9105 SetTurnAnimCorrectionRate
    <int>

自動捕捉対象クリア                   
- Acquired special category number for clear-equipped clear weapons

キャンセルタイミングでAIへのリプランニング要求    
- Request for replanning to AI at cancellation timing

投げ抜け抵抗回数取得                      
- Get throw-through resistance count

武器パラメータ参照先
- Weapon parameter reference - SetAttackHand (y is hand index)

AI通知攻撃タイプ
- AI notification attack type - SetInterruptType (y is type index)

弓矢スロット選択
- Get Arrow/Bolt Selection

アーツポイント使用予約
- Get FP Reservation for Weapon Art (y is button index, z is hand index)

自動捕捉対象設定
- Update Lockon Target

自動捕捉対象クリア
- Clear Lockon Target

貪欲者の印スリップダメージ無効
- No Greedy Slip Damage

攻撃が中断された
- Attack Interrupted

吹っ飛びダメージ旋回
- Blow off damage swirl

はしごアクション状態設定
- Ladder Action State

AIが行動中か設定
- Set whether AI is in action state

投げアニメ強制停止
- Throw Animation Force Stop

投げアニメ停止要請
- Request Stop Throw Animation

投げ攻撃可能タイプ設定
- Throw Attack Possible Type (y is type index - 255 for none)

移動切替
- Move Switching (y is boolean)

アイテムアニメ中か設定
- Set item animation in progress

はしご滑り降り解除
- Ladder slide down

特殊補間設定
- Special interpolation setting
<int>
<bool>

#------------------------
# <attack request type>
#------------------------
0 R1 
1 L1 
2 Catalyst / Talisman / Pyromancy Flame R1 
3 Catalyst / Talisman / Pyromancy Flame L1 
10 Backstep 
14 Use Goods 
15 Roll Forward 
16 Roll Backward 
17 Roll Left 
18 Roll Right 
22 AttackArm_Gesture0 (Beckon) 
23 AttackArm_Gesture1 (Point Forward) 
24 AttackArm_Gesture2 (Hurrah!) 
25 AttackArm_Gesture3 (Bow) 
26 AttackArm_Gesture4 (Joy) 
27 AttackArm_Gesture5 (Shrug) 
28 AttackArm_Gesture6 (Wave) 
29 AttackArm_Gesture7 (Praise the Sun) 
30 AttackArm_Gesture8 (Point Up) 
31 AttackArm_Gesture9 (Point Down) 
32 AttackArm_Gesture10 (Look Skyward) 
33 AttackArm_Gesture11 (Well! What is it!) 
34 AttackArm_Gesture12 (Prostration) 
35 AttackArm_Gesture13 (Proper Bow) 
36 AttackArm_Gesture14 (Prayer) 
37 AttackArm_Gesture15 (Unused)
38 AttackArm_Gesture16 (Unused)
39 AttackArm_Gesture17 (Unused)
40 AttackArm_Gesture18 (Unused)
41 AttackArm_Gesture19 (Unused)
42 Jump 
52 Left Hand Crossbow Ammo Swap 

#------------------------
# <anim category>
#------------------------
0 Based on Left Hand Motion Category
1 Based on Right Hand Motion Category
2 Based on current Move Param
3 Absolute Animation ID

#------------------------
# <anim layer index>
#------------------------
0 Wait
1 SpWait
2 WalkLR
3 WalkFB
4 Guard
5 Attack
6 SpecialAttack
7 Action
8 Damage S
9 Damage L
10 Event
11 ExtraAnim
12 TaeExtraAnim

#------------------------
# Other Commands
#------------------------
# Getter
root:getTranslation() # Returns position

# Animation
Fire( <animation> )
ExecEvent( <animation> ) # Found in eventnameid.txt
ExecEventAllBody( <animation> ) # Found in eventnameid.txt

# HKB
hkbFireEvent( <state> )
hkbSetVariable( <variable>, <value> ) # Found in variablenameid.txt
hkbGetBoneModelSpace( <bone> ) # 
hkbIsNodeActive( <node> )

#------------------------
# Reference
#------------------------
hkbStateMachine: #256 Master_SM 
 